{"version":3,"sources":["components/Page/styles.js","components/Page/index.js","components/Page/PageContent/styles.js","components/Page/PageContent/index.js","pages/NotFound/index.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","pages/ErrorPage/index.js","routes/error.js"],"names":["styles","root","position","height","overflow","useStyles","makeStyles","Page","children","disableGutter","noHeader","classes","className","classnames","theme","PageContent","NotFound","redirect","history","useHistory","useEffect","replace","variant","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","concat","capitalize","withStyles","margin","typography","caption","button","overline","srOnly","width","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","ErrorPage","useState","msg","setMsg","params","URLSearchParams","window","location","search","get","ErrorRouter","url","useRouteMatch","exact","path"],"mappings":"8JAQeA,EARA,iBAAO,CACpBC,KAAM,CACJC,SAAU,WACVC,OAAQ,oBACRC,SAAU,UCGRC,EAAYC,YAAWN,GAOdO,IALF,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,SAAwD,IAA9CC,qBAA8C,aAAvBC,gBAAuB,SAChEC,EAAUN,IAChB,OAAO,sBAAMO,UAAWC,IAAWF,EAAQV,KAAM,CAAE,QAASQ,EAAe,QAASC,IAA7E,SAA2FF,M,4DCLrFR,EANA,SAAAc,GAAK,MAAK,CACvBb,KAAM,CACJE,OAAQ,UCGNE,EAAYC,YAAWN,GAOde,IALK,SAAC,GAAkC,IAAhCP,EAA+B,EAA/BA,SAA+B,IAArBI,iBAAqB,MAAT,GAAS,EAC9CD,EAAUN,IAChB,OAAO,yBAASO,UAAS,UAAKD,EAAQV,KAAb,YAAqBW,GAAvC,SAAqDJ,M,sFCoB/CQ,IArBE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACZC,EAAUC,cAQhB,OANAC,qBAAU,WACJH,GACFC,EAAQG,QAAQJ,KAEjB,IAGD,cAAC,IAAD,UACE,cAAC,IAAD,UACE,sBAAKL,UAAU,OAAf,UACE,cAAC,IAAD,CAAYU,QAAQ,KAApB,4BACCL,GAAY,cAAC,IAAD,CAAYK,QAAQ,QAApB,qC,iCCtBvB,wDA2IIC,EAAwB,CAC1BC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,UAAW,KACXC,UAAW,KACXC,MAAO,IACPC,MAAO,KAELC,EAA0BC,cAAiB,SAAoBC,EAAOC,GACxE,IAAIC,EAAeF,EAAMG,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9C3B,EAAUyB,EAAMzB,QAChBC,EAAYwB,EAAMxB,UAClB4B,EAAeJ,EAAMK,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAYN,EAAMM,UAClBC,EAAiBP,EAAMQ,QACvBA,OAA6B,IAAnBD,EAA4B,UAAYA,EAClDE,EAAsBT,EAAMU,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAgBX,EAAMY,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBb,EAAMc,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAiBf,EAAMd,QACvBA,OAA6B,IAAnB6B,EAA4B,QAAUA,EAChDC,EAAwBhB,EAAMiB,eAC9BA,OAA2C,IAA1BD,EAAmC7B,EAAwB6B,EAC5EE,EAAQC,YAAyBnB,EAAO,CAAC,QAAS,UAAW,YAAa,QAAS,YAAa,UAAW,eAAgB,SAAU,YAAa,UAAW,mBAE7JoB,EAAYd,IAAcQ,EAAY,IAAMG,EAAe/B,IAAYC,EAAsBD,KAAa,OAC9G,OAAoBa,gBAAoBqB,EAAWC,YAAS,CAC1D7C,UAAW8C,YAAK/C,EAAQV,KAAMW,EAAuB,YAAZU,GAAyBX,EAAQW,GAAoB,YAAVmB,GAAuB9B,EAAQ,QAAQgD,OAAOC,YAAWnB,KAAUO,GAAUrC,EAAQqC,OAAQF,GAAgBnC,EAAQmC,aAAcI,GAAavC,EAAQuC,UAAqB,YAAVX,GAAuB5B,EAAQ,QAAQgD,OAAOC,YAAWrB,KAAsB,YAAZK,GAAyBjC,EAAQ,UAAUgD,OAAOC,YAAWhB,MACvXP,IAAKA,GACJiB,OA0EUO,iBApPK,SAAgB/C,GAClC,MAAO,CAELb,KAAM,CACJ6D,OAAQ,GAIV7B,MAAOnB,EAAMiD,WAAW9B,MAGxBD,MAAOlB,EAAMiD,WAAW/B,MAGxBgC,QAASlD,EAAMiD,WAAWC,QAG1BC,OAAQnD,EAAMiD,WAAWE,OAGzBzC,GAAIV,EAAMiD,WAAWvC,GAGrBC,GAAIX,EAAMiD,WAAWtC,GAGrBC,GAAIZ,EAAMiD,WAAWrC,GAGrBC,GAAIb,EAAMiD,WAAWpC,GAGrBC,GAAId,EAAMiD,WAAWnC,GAGrBC,GAAIf,EAAMiD,WAAWlC,GAGrBC,UAAWhB,EAAMiD,WAAWjC,UAG5BC,UAAWjB,EAAMiD,WAAWhC,UAG5BmC,SAAUpD,EAAMiD,WAAWG,SAG3BC,OAAQ,CACNjE,SAAU,WACVC,OAAQ,EACRiE,MAAO,EACPhE,SAAU,UAIZiE,UAAW,CACTC,UAAW,QAIbC,YAAa,CACXD,UAAW,UAIbE,WAAY,CACVF,UAAW,SAIbG,aAAc,CACZH,UAAW,WAIbtB,OAAQ,CACN5C,SAAU,SACVsE,aAAc,WACdC,WAAY,UAId7B,aAAc,CACZ8B,aAAc,UAIhB1B,UAAW,CACT0B,aAAc,IAIhBC,aAAc,CACZpC,MAAO,WAITqC,aAAc,CACZrC,MAAO3B,EAAMiE,QAAQC,QAAQC,MAI/BC,eAAgB,CACdzC,MAAO3B,EAAMiE,QAAQI,UAAUF,MAIjCG,iBAAkB,CAChB3C,MAAO3B,EAAMiE,QAAQM,KAAKL,SAI5BM,mBAAoB,CAClB7C,MAAO3B,EAAMiE,QAAQM,KAAKF,WAI5BI,WAAY,CACV9C,MAAO3B,EAAMiE,QAAQS,MAAMP,MAI7BQ,cAAe,CACb7C,QAAS,UAIX8C,aAAc,CACZ9C,QAAS,YAoHmB,CAChC+C,KAAM,iBADO9B,CAEZ3B,I,0EC3OY0D,EAhBG,WAAO,IAAD,EACAC,mBAAS,IADT,mBACfC,EADe,KACVC,EADU,KAQtB,OALA3E,qBAAU,WACR,IAAM4E,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QACnDL,EAAOC,EAAOK,IAAI,YACjB,IAGD,gCACE,uCACA,4BAAIP,Q,SCIKQ,UAXK,WAAO,IACjBC,EAAQC,cAARD,IAER,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAMH,EAAK7D,UAAWkD,IACnC,cAAC,IAAD,CAAOlD,UAAW1B","file":"static/js/4.0fc024a9.chunk.js","sourcesContent":["const styles = () => ({\n  root: {\n    position: 'relative',\n    height: 'calc(100% - 72px)',\n    overflow: 'auto',\n  },\n});\n\nexport default styles;\n","import React from 'react';\n\nimport classnames from 'classnames';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport styles from './styles';\nconst useStyles = makeStyles(styles);\n\nconst Page = ({ children, disableGutter = false, noHeader = false }) => {\n  const classes = useStyles();\n  return <main className={classnames(classes.root, { 'px-3': !disableGutter, 'mt-9': !noHeader })}>{children}</main>;\n};\n\nexport default Page;\n","const styles = theme => ({\n  root: {\n    height: '100%',\n  },\n});\n\nexport default styles;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport styles from './styles';\nconst useStyles = makeStyles(styles);\n\nconst PageContent = ({ children, className = '' }) => {\n  const classes = useStyles();\n  return <section className={`${classes.root} ${className}`}>{children}</section>;\n};\n\nexport default PageContent;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport Page from '@/components/Page';\nimport PageContent from '@/components/Page/PageContent';\n\nconst NotFound = ({ redirect }) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    if (redirect) {\n      history.replace(redirect);\n    }\n  }, []);\n\n  return (\n    <Page>\n      <PageContent>\n        <div className=\"mt-2\">\n          <Typography variant=\"h5\">Page Not Found</Typography>\n          {redirect && <Typography variant=\"body1\">Redirecting...</Typography>}\n        </div>\n      </PageContent>\n    </Page>\n  );\n};\n\nexport default NotFound;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React, { useEffect, useState } from 'react';\n\nconst ErrorPage = () => {\n  const [msg, setMsg] = useState('');\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    setMsg(params.get('error'));\n  }, []);\n\n  return (\n    <div>\n      <h1>Error</h1>\n      <p>{msg}</p>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\n\nimport ErrorPage from '@/pages/ErrorPage';\nimport NotFound from '@/pages/NotFound';\n\nconst ErrorRouter = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={url} component={ErrorPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default ErrorRouter;\n"],"sourceRoot":""}